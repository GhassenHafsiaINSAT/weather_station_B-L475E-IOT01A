/*
 * at_commands.h
 *
 *  Created on: Apr 28, 2025
 *      Author: ghass
 */

#ifndef INC_AT_COMMANDS_H_
#define INC_AT_COMMANDS_H_
#ifndef WIFI_MQTT_H
#define WIFI_MQTT_H

#include <string.h>
#include <stdio.h>
// AT Command Macros
// Configuring the WI-FI
#define AT_CMD_SET_PASSPHRASE    		"C2=%s\r\n"
#define AT_CMD_SET_SSID  				"C1=%s\r\n"
#define AT_CMD_C3_SECURITY_MODE  		"C3=3\r\n"			// AES security
#define AT_CMD_C4_DHCP           		"C4=1\r\n"			// Enable DHCP
#define AT_CMD_JOIN_NET          		"C0\r\n"			// join the Network
#define AT_CMD_CONNECT_AUT				"CC=1\r\n"			// connect automatically on power up
#define AT_CMD_SAVE_CONFIG				"Z1\r\n"			//Save changes to flash



void send_at_cmd(const char* cmd){
	HAL_UART_Transmit(huart3, (uint8_t)cmd, strlen(cmd), 100);
}

void wifi_init(const char* ssid, const char* passphrase){
    char buffer[128];

    snprintf(buffer, sizeof(buffer), AT_CMD_SET_SSID, ssid);
    send_at_command(buffer);

    snprintf(buffer, sizeof(buffer), AT_CMD_SET_PASSPHRASE, passphrase);
    send_at_command(buffer);

    send_at_cmd(AT_CMD_C3_SECURITY_MODE);
    send_at_cmd(AT_CMD_C4_DHCP);
    send_at_cmd(AT_CMD_JOIN_NET);
    send_at_cmd(AT_CMD_CONNECT_AUT);
}

void wifi_save_settings(void){
	send_at_cmd(AT_CMD_SAVE_CONFIG);
}

#define AT_CMD_P0_SELECT_SOCKET  "P0=0"
#define AT_CMD_P1_PROTOCOL       "P1=4"       // MQTT protocol
#define AT_CMD_P3_BROKER_IP      "P3="
#define AT_CMD_P4_BROKER_PORT    "P4=1883"    // Default MQTT port
#define AT_CMD_P6_START_CLIENT   "P6=1"       // Start MQTT client

#define AT_CMD_PM_PUBLISH_TOPIC  "PM=0,"
#define AT_CMD_PM_SUBSCRIBE_TOPIC "PM=1,"
#define AT_CMD_PM_SECURITY_MODE "PM=2,0"
#define AT_CMD_PM_CLIENT_ID      "PM=5,"
#define AT_CMD_PM_KEEP_ALIVE     "PM=6,60"    // Keep-alive interval 60 sec

#define AT_CMD_S1_PAYLOAD_SIZE   "S1=8"
#define AT_CMD_S0_SEND_DATA      "S0"

// Function Prototypes
void wifi_init(void);
void wifi_connect(const char* ssid, const char* passphrase);
void wifi_save_settings(void);
void mqtt_configure(const char* broker_ip, const char* client_id, const char* topic);
void mqtt_publish(const char* topic, const char* message);
void mqtt_subscribe(const char* topic);
void wifi_disconnect(void);

#endif // WIFI_MQTT_H



#endif /* INC_AT_COMMANDS_H_ */
